trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '5d779943-de27-442a-a70e-56e3ee8a811b'

  # Web app name
  webAppName: 'nextteam2'

  # Environment name
  environmentName: 'nextteam2'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
      fetchDepth: 0

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonar-cloud'
        organization: 'nextteam'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'NextTeam_BE'
        cliProjectName: 'BE'
        cliSources: '.'

    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
        npm run test --if-present
      displayName: 'npm install, build and test'

    - task: SonarCloudAnalyze@1
      inputs:
        jdkversion: 'JAVA_HOME_17_X64'

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'

    - task: CopyFiles@2
      displayName: "Task Copy Web.config"
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)/src/'
        contents: 'web.config'
        targetFolder: '$(Build.SourcesDirectory)/dist/'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/dist'
        includeRootFolder: 'false'
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: 'true'
      displayName: 'Archive build output'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        artifactName: 'drop'
      displayName: 'Publish Artifact'

# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#   - deployment: Deploy
#     displayName: Deploy
#     environment: $(environmentName)
#     pool:
#       vmImage: $(vmImageName)
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureWebApp@1
#             displayName: 'Azure Web App Deploy: nextteam2'
#             inputs:
#               azureSubscription: $(azureSubscription)
#               appType: webAppLinux
#               appName: $(webAppName)
#               runtimeStack: 'NODE|20-lts'
#               package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
#               startUpCommand: 'npm run start'